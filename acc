#!/bin/bash
#usage: acc <mode> <file> <aspell options>
#requires: aspell

#required arguments
if [ $# -lt 2 ];
then
echo "Usage:                ./acc.sh <mode> \"<file>\" \"(<aspell options>)\"";
echo "<mode>:               a mode file, typically ending in .pl";
echo "<file>:               the file you wish to check, or a file-ending specified by \"*.ext\"";
echo "<aspell options>:     options that are passed directly to aspell, in double quotes";
echo "if called through 'source', ACC_NO_FILES and ACC_NO_ERRORS might be useful to you"
exit $EINVAL
fi
#optional parameters
while getopts "x": arg; do
  case $arg in
    x)
      excludes=("${excludes[@]}" $OPTARG);;
    ?)
      echo "only valid option is -x \"directory\" to exclude directories";;
  esac
done


ACC_NO_ERRORS=""
ACC_NO_FILES=""
# exclude options by shifting arguments
shift "$((OPTIND-1))"
# rename the arguments, for cleaner code
mode=$1
files=$2
opts=$3
# find files to spellcheck
filesToCheck=$(find -name "$files")
# excluded files are removed from path

for file in $filesToCheck;
do
  for i in "${excludes[@]}"; do
    [[ $file =~ $i ]] && continue 2
  done

  let "ACC_NO_FILES = ACC_NO_FILES + 1"
    errs=`cat $file | perl $mode | aspell $opts list`
    [ ! -z "$errs" ] && echo "======$file====="

    # remove duplicates, sort the output and
    for i in $(echo $errs | tr  " " "\n" | sort -u )
    do
        let "ACC_NO_ERRORS = ACC_NO_ERRORS + 1"
        echo $i
    done
done
